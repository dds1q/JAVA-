//https://programmers.co.kr/learn/courses/30/lessons/42889
//https://ddsiq.tistory.com/24
import java.util.*;
import java.util.Map.Entry;
class Solution {
    public int[] solution(int N, int[] stages) {        
        Map<Integer,Double> hm = new HashMap<>();
        for( int i = 0 ; i < N ; i++ ){
            int clear = 0;
            int user = 0;
            for( int j = 0 ; j < stages.length ; j++ ){
                if( i + 1 == stages[j] ) user++;
                else if( i + 1 < stages[j] ) {clear++ ; user++;}
            }
            if( user == 0 ){
                hm.put( i + 1 , 0.0 );
            } else {
                double rate = 1 - ( (double)clear / user ) ; 
                hm.put( i + 1 , rate ); 
            }
        }
        List<Entry<Integer,Double>> list_entry = new ArrayList<>( hm.entrySet() );
        Collections.sort( list_entry , new Comparator<Entry<Integer,Double>>(){
			@Override
			public int compare(Entry<Integer, Double> o1, Entry<Integer, Double> o2) {				
				return o2.getValue().compareTo( o1.getValue() );
			}			
		});
        int[] answer = new int[ list_entry.size() ];        
        for( int i = 0 ; i < answer.length ; i++ ){
            answer[i] = list_entry.get(i).getKey();
        }
        return answer;
    }
}
